# LSL keywords updated 19 Dec 2006 for LSL 1.13 by http://adammarker.org/shill
ACTIVE
AGENT
AGENT_ALWAYS_RUN
AGENT_ATTACHMENTS
AGENT_AWAY
AGENT_BUSY
AGENT_CROUCHING
AGENT_FLYING
AGENT_IN_AIR
AGENT_MOUSELOOK
AGENT_ON_OBJECT
AGENT_SCRIPTED
AGENT_SITTING
AGENT_TYPING
AGENT_WALKING
ALL_SIDES
ANIM_ON
attach(key id)Triggered when an agent attaches or detaches from agent
ATTACH_BACK
ATTACH_BELLY
ATTACH_CHEST
ATTACH_CHIN
ATTACH_HEAD
ATTACH_LEAR
ATTACH_LEYE
ATTACH_LFOOT
ATTACH_LHAND
ATTACH_LHIP
ATTACH_LLARM
ATTACH_LLLEG
ATTACH_LPEC
ATTACH_LSHOULDER
ATTACH_LUARM
ATTACH_LULEG
ATTACH_MOUTH
ATTACH_NOSE
ATTACH_PELVIS
ATTACH_REAR
ATTACH_REYE
ATTACH_RFOOT
ATTACH_RHAND
ATTACH_RHIP
ATTACH_RLARM
ATTACH_RLLEG
ATTACH_RPEC
ATTACH_RSHOULDER
ATTACH_RUARM
ATTACH_RULEG
at_rot_target(integer tnum, rotation targetrot, rotation ourrot)Result of LLRotTarget library function call
at_target(integer tnum, vector targetpos, vector ourpos)Result of llTarget library function call
CAMERA_ACTIVE
CAMERA_BEHINDNESS_ANGLE
CAMERA_BEHINDNESS_LAG
CAMERA_DISTANCE
CAMERA_FOCUS
CAMERA_FOCUS_LAG
CAMERA_FOCUS_LOCKED
CAMERA_FOCUS_OFFSET
CAMERA_FOCUS_THRESHOLD
CAMERA_PITCH
CAMERA_POSITION
CAMERA_POSITION_LAG
CAMERA_POSITION_LOCKED
CAMERA_POSITION_THRESHOLD
changed(integer change)Triggered various event change the task:(test change with CHANGED_INVENTORY, CHANGED_COLOR, CHANGED_SHAPE, CHANGED_SCALE,:CHANGED_TEXTURE, CHANGED_LINK)
CHANGED_ALLOWED_DROP
CHANGED_COLOR
CHANGED_INVENTORY
CHANGED_LINK
CHANGED_OWNER
CHANGED_REGION
CHANGED_SCALE
CHANGED_SHAPE
CHANGED_TELEPORT
CHANGED_TEXTURE
collision(integer num_detected)Triggered while task is colliding with another task
collision_end(integer num_detected)Triggered when task stops colliding with another task
collision_start(integer num_detected)Triggered when task starts colliding with another task
control(key id, integer level, integer edge)Result of llTakeControls library function call
CONTROL_BACK
CONTROL_DOWN
CONTROL_FWD
CONTROL_LBUTTON
CONTROL_LEFT
CONTROL_ML_LBUTTON
CONTROL_RIGHT
CONTROL_ROT_LEFT
CONTROL_ROT_RIGHT
CONTROL_UP
dataserver(key queryid, string data)Triggered when task receives asynchronous data
DATA_BORN
DATA_NAME
DATA_ONLINE
DATA_PAYINFO
DATA_RATING
DATA_SIM_POS
DATA_SIM_RATING
DATA_SIM_STATUS
debug(string state, string event, string block, string message, integer level)Print debug information
DEBUG_CHANNEL
DEG_TO_RAD
email(string time, string address, string subj, string message, integer num_left)Triggered when task receives email
EOF
FALSE
HTTP_BODY_MAXLENGTH
HTTP_BODY_TRUNCATED
HTTP_METHOD
HTTP_MIMETYPE
http_response(key request_id, integer status, list metadata, string body)This event handler is invoked when an HTTP response is received for a pending llHTTPRequest request or if a pending request fails or times out.
HTTP_VERIFY_CERT
INVENTORY_ALL
INVENTORY_ANIMATION
INVENTORY_BODYPART
INVENTORY_CLOTHING
INVENTORY_GESTURE
INVENTORY_LANDMARK
INVENTORY_NONE
INVENTORY_NOTECARD
INVENTORY_OBJECT
INVENTORY_SCRIPT
INVENTORY_SOUND
INVENTORY_TEXTURE
land_collision(vector pos)Triggered when task is colliding with land
land_collision_end(vector pos)Triggered when task stops colliding with land
land_collision_start(vector pos)Triggered when task starts colliding with land
LAND_LARGE_BRUSH
LAND_LEVEL
LAND_LOWER
LAND_MEDIUM_BRUSH
LAND_NOISE
LAND_RAISE
LAND_REVERT
LAND_SMALL_BRUSH
LAND_SMOOTH
LINK_ALL_CHILDREN
LINK_ALL_OTHERS
link_message(integer sender_num, integer num, string str, key id)Triggered when task receives a link message via LLMessageLinked library function call
LINK_ROOT
LINK_SET
LINK_THIS
listen(integer channel, string name, key id, string message)Result of the llListen library function call
LIST_STAT_GEOMETRIC_MEAN
LIST_STAT_MAX
LIST_STAT_MEAN
LIST_STAT_MEDIAN
LIST_STAT_MIN
LIST_STAT_NUM_COUNT
LIST_STAT_RANGE
LIST_STAT_STD_DEV
LIST_STAT_SUM
LIST_STAT_SUM_SQUARES
llAbs(integer val)[integer] 
llAcos(float val)[float] Returns the arccosine in radians of val
llAddToLandBanList(key avatar, float hours)Add avatar to the parcel ban list for the given duration of hours.
llAddToLandPassList(key avatar, float hours)Add avatar to the land pass list for hours
llAdjustSoundVolume(float volume)adjusts volume of attached sound (0.0 - 1.0)
llAllowInventoryDrop(integer add)If add == TRUE, users without permissions can still drop inventory items onto task
llAngleBetween(rotation a, rotation b)[float] Returns angle between rotation a and b
llApplyImpulse(vector force, integer local)applies impulse to object, in local coords if local == TRUE (if the script is physical)
llApplyRotationalImpulse(vector force, integer local)applies rotational impulse to object, in local coords if local == TRUE (if the script is physical)
llAsin(float val)[float] Returns the arcsine in radians of val
llAtan2(float y, float x)[float] 
llAttachToAvatar(integer attachment)Attach to avatar task has permissions for at point attachment
llAvatarOnSitTarget()[key] If an avatar is sitting on the sit target, return the avatar's key, NULL_KEY otherwise
llAxes2Rot(vector fwd, vector left, vector up)[rotation] returns the rotation defined by the coordinate axes
llAxisAngle2Rot(vector axis, float angle)[rotation] Returns the rotation generated angle about axis
llBase64ToInteger(string str)[integer] Little endian decode of a 4 character Base64 string into the lower 24-bits of an integer.
llBase64ToString(string str)[string] Converts a Base 64 string to a conventional string.  If the conversion creates any unprintable characters, they are converted to spaces.
llBreakAllLinks()Delinks all tasks in the link set (requires permission PERMISSION_CHANGE_LINKS be set)
llBreakLink(integer linknum)Delinks the task with the given link number (requires permission PERMISSION_CHANGE_LINKS be set)
llCeil(float val)[integer] returns smallest integer value >= val
llClearCameraParams()Resets all camera parameters to default values and turns off scripted camera control.
llCloseRemoteDataChannel(key channel)Closes XML-RPC channel.
llCloud(vector v)[float] returns the cloud density at the object position + v
llCollisionFilter(string name, key id, integer accept)if accept == TRUE, only accept collisions with objects name and id (either is optional), otherwise with objects not name or id
llCollisionSound(string impact_sound, float impact_volume)Suppress default collision sounds, replace default impact sounds with impact_sound (empty string to just suppress)
llCollisionSprite(string impact_sprite)Suppress default collision sprites, replace default impact sprite with impact_sprite (empty string to just suppress)
llCos(float theta)[float] theta in radians
llCreateLink(key target, integer parent)Attempt to link task script is attached to and target (requires permission PERMISSION_CHANGE_LINKS be set). If parent == TRUE, task script is attached to is the root
llCSV2List(string src)[list] Create a list from a string of comma separated values
llDeleteSubList(list src, integer start, integer end)[list] Remove the slice from the list and return the remainder
llDeleteSubString(string src, integer start, integer end)[string] removes the indicated substring and returns the result
llDetachFromAvatar()Drop off of avatar
llDetectedGrab(integer number)[vector] returns the grab offset of the user touching object (returns <0,0,0> if number is not valid sensed object)
llDetectedGroup(integer number)[integer] Returns TRUE if detected object is part of same group as owner
llDetectedKey(integer number)[key] returns the key of detected object number (returns empty key if number is not valid sensed object)
llDetectedLinkNumber(integer number)[integer] returns the link position of the triggered event for touches and collisions only
llDetectedName(integer number)[string] returns the name of detected object number (returns empty string if number is not valid sensed object)
llDetectedOwner(integer number)[key] returns the key of detected object's owner (returns empty key if number is not valid sensed object)
llDetectedPos(integer number)[vector] returns the position of detected object number (returns <0,0,0> if number is not valid sensed object)
llDetectedRot(integer number)[rotation] returns the rotation of detected object number (returns <0,0,0,1> if number is not valid sensed object)
llDetectedType(integer number)[integer] returns the type (AGENT, ACTIVE, PASSIVE, SCRIPTED) of detected object (returns 0 if number is not valid sensed object)
llDetectedVel(integer number)[vector] returns the velocity of detected object number (returns <0,0,0> if number is not valid sensed object)
llDialog(key avatar, string message, list buttons, integer chat_channel)Shows a dialog box on the avatar's screen with the message.Up to four strings in the list form buttons.If a button is clicked, the name is chatted on chat_channel.
llDie()deletes the object
llDumpList2String(list src, string separator)[string] Write the list out in a single string using separator between values
llEdgeOfWorld(vector pos, vector dir)[integer] Checks to see whether the border hit by dir from pos is the edge of the world (has no neighboring simulator)
llEjectFromLand(key pest)Ejects pest from land that you own
llEmail(string address, string subject, string message)Sends email to address with subject and message
llEscapeURL(string url)[string] Returns the string that is the URL-escaped version of url (replacing spaces with %20, etc).
llEuler2Rot(vector v)[rotation] returns the rotation representation of Euler Angles v
llFabs(float val)[float] 
llFloor(float val)[integer] returns largest integer value <= val
llForceMouselook(integer mouselook)If mouselook is TRUE any avatar that sits on this object is forced into mouselook mode
llFrand(float mag)[float] returns random number in range [0,mag)
llGetAccel()[vector] gets the acceleration
llGetAgentInfo(key id)[integer] Gets information about agent ID.  Returns AGENT_FLYING, AGENT_ATTACHMENTS, and/or AGENT_SCRIPTED
llGetAgentSize(key id)[vector] If the agent is in the same sim as the object, returns the size of the avatar
llGetAlpha(integer face)[float] gets the alpha
llGetAndResetTime()[float] gets the time in seconds since creation and sets the time to zero
llGetAnimation(key id)[string] Get the currently playing locomotion animation for avatar id
llGetAnimationList(key id)[list] Gets a list of all playing animations for avatar id
llGetAttached()returns the object attachment point or 0 if not attached
llGetBoundingBox()[list] Returns the bounding box around an object (including any linked prims) relative to the root prim, in a list:  [ (vector) min_corner, (vector) max_corner ]
llGetCameraPos()[vector] Returns the position of the camera of the user that granted the script PERMISSION_TRACK_CAMERA.
llGetCameraRot()[rotation] Returns the rotation of the camera of the user who's granted this script PERMISSION_TRACK_CAMERA.
llGetCenterOfMass()[vector] Get the object's center of mass
llGetColor(integer face)[vector] gets the color
llGetCreator()[key] Returns the creator of the object
llGetDate()[string] Gets the date as YYYY-MM-DD
llGetEnergy()[float] Returns how much energy is in the object as a percentage of maximum
llGetForce()[vector] gets the force (if the script is physical)
llGetFreeMemory()returns the available heap space for the current script
llGetGeometricCenter()[vector] Returns the geometric center of the linked set the script is attached to.
llGetGMTclock()[float] Gets the time in seconds since midnight in GMT
llGetInventoryCreator(string item)[key] Returns the key for the creator of the inventory item.
llGetInventoryKey(string name)[key] Returns the key of the inventory name
llGetInventoryName(integer type, integer number)[string] Get the name of the inventory item number of type
llGetInventoryNumber(integer type)[integer] Get the number of items of a given type in the task's inventory.Valid types: INVENTORY_TEXTURE, INVENTORY_SOUND, INVENTORY_OBJECT, INVENTORY_SCRIPT, INVENTORY_CLOTHING, INVENTORY_BODYPART, INVENTORY_NOTECARD, INVENTORY_LANDMARK, INVENTORY_ALL
llGetInventoryPermMask(string item, integer mask)[integer] Returns the requested permission mask for the inventory item.
llGetInventoryType(string name)[integer] Returns the type of the inventory item name.
llGetKey()[key] Get the key for the task the script is attached to
llGetLandOwnerAt(vector pos)[key] Returns the key of the land owner, NULL_KEY if public
llGetLinkKey(integer linknum)[key] Get the key of linknumber in link set
llGetLinkName(integer linknum)[string] Get the name of linknumber in link set
llGetLinkNumber()[integer] Returns what number in a link set the script is attached to (0 means no link, 1 the root, 2 for first child, &c)
llGetListEntryType(list src, integer index)[integer] Returns the type of the index entry in the list(TYPE_INTEGER, TYPE_FLOAT, TYPE_STRING, TYPE_KEY, TYPE_VECTOR, TYPE_ROTATION, or TYPE_INVALID if index is off list)
llGetListLength(list src)[integer] Get the number of elements in the list
llGetLocalPos()[vector] gets the position relative to the root (if the script isn't physical)
llGetLocalRot()[rotation] gets the rotation local to the root (if the script isn't physical)
llGetMass()[float] Get the mass of task name that script is attached to
llGetNextEmail(string address, string subject)Get the next waiting email with appropriate address and/or subject (if blank they are ignored)
llGetNotecardLine(string name, integer line)[key] Returns line line of notecard name via the database event
llGetNumberOfNotecardLines(string name)[key] Returns number of lines in notecard 'name' via the database event (cast return value to integer)
llGetNumberOfPrims()[integer] Returns the number of prims in a link set the script is attached to
llGetNumberOfSides()[integer] Returns the number of sides
llGetObjectDesc()[string] Returns the description of the object the script is attached to
llGetObjectMass(key id)[float] Get the mass of the object with key id
llGetObjectName()[string] Returns the name of the object script is attached to
llGetObjectPermMask(integer mask)[integer] Returns the requested permission mask for the root object the task is attached to.
llGetObjectPrimCount(key id)[integer] Returns the prim count for any specific object in a sim
llGetOmega()[vector] gets the omega
llGetOwner()[key] Returns the owner of the task
llGetOwnerKey(key id)[key] Find the owner of id
llGetParcelDetails(vector pos, list details)[list] Returns a list of the details for the parcel at pos (see PARCEL_DETAILS_*)
llGetParcelFlags(vector pos)[integer] Returns a bitfield specifying the parcel flags (PARCEL_FLAG_*) for the parcel under the position pos.
llGetParcelMaxPrims(vector pos, integer sim_wide)[integer] If sim_wide == TRUE, returns total prims allowed on the parcel, otherwise the number of prims supported by the individual parcel.
llGetParcelPrimCount(vector pos, integer category, bool sim_wide)[integer] Returns the number of objects in the category specified on all parcels owned by the same owner (if sim_wide == TRUE), or this specific parcel (if sim_wide == FALSE). See PARCEL_COUNT_*
llGetParcelPrimOwners(vector pos)[list] Returns a list of up to 100 agents who own objects in the parcel, and the number of objects they own
llGetPermissions()[integer] return what permissions have been enabled
llGetPermissionsKey()[key] Return agent that permissions are enabled for.  NULL_KEY if not enabled
llGetPos()[vector] gets the position (if the script isn't physical)
llGetPrimitiveParams(list params)[list] Gets primitive parameters specified in the params list.
llGetRegionCorner()[vector] Returns a vector with the south west corner x,y position of the region the object is in
llGetRegionFlags()[integer] Returns a bitfield specifying the region flags (REGION_FLAG_*) for the region the object is in.
llGetRegionFPS()returns the mean region frames per second
llGetRegionName()returns the current region name
llGetRegionTimeDilation()returns the current time dilation as a float between 0 and 1
llGetRootPosition()[vector] Gets the global position of the root object of the object script is attached to
llGetRootRotation()[rotation] Gets the global rotation of the root object of the object script is attached to
llGetRot()[rotation] gets the rotation (if the script isn't physical)
llGetScale()[vector] gets the scale
llGetScriptName()Returns the script name
llGetScriptState(string name)[integer] Resets TRUE if script name is running
llGetSimulatorHostname()[string] Gets the hostname of the machine script is running on (same as string in viewer Help dialog)
llGetStartParameter()[integer] Get's the start paramter passed to llRezObject
llGetStatus(integer status)[integer] gets value of status (STATUS_PHYSICS, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z)
llGetSubString(string src, integer start, integer end)[string] returns the indicated substring
llGetSunDirection()[vector] Returns the sun direction on the simulator
llGetTexture(integer face)[string] gets the texture of face (if it's a texture in the object inventory, otherwise the key in a string)
llGetTextureOffset(integer side)[vector] Returns the texture offset of side in the x and y components of a vector
llGetTextureRot(integer side)[float] Returns the texture rotation of side
llGetTextureScale(integer side)[vector] Returns the texture scale of side in the x and y components of a vector
llGetTime()[float] gets the time in seconds since creation
llGetTimeOfDay()[float] gets the time in seconds since Second Life server start
llGetTimestamp()[string] Gets the timestamp in the format: YYYY-MM-DDThh:mm:ss.ff..fZ
llGetTorque()[vector] gets the torque (if the script is physical)
llGetUnixTime()[integer] This function returns the number of seconds elapsed since 00:00 hours, Jan 1, 1970 UTC from the system clock. In UNIX terms, time_t.
llGetVel()[vector] gets the velocity
llGetWallclock()[float] gets the time in seconds since midnight
llGiveInventory(key destination, string inventory)Give inventory to destination
llGiveInventoryList(key destination, string category, list inventory)Give inventory to destination in a new category
llGiveMoney(key destination, integer amount)transfer amount of money from script owner to destination
llGodLikeRezObject(key inventory, vector pos)rez directly off of a UUID if owner has dog-bit set
llGround(vector v)[float] returns the ground height below the object position + v
llGroundContour(vector v)returns the ground contour below the object position + v
llGroundNormal(vector v)returns the ground normal below the object position + v
llGroundRepel(float height, integer water, float tau)Critically damps to height if within height*0.5 of level (either above ground level or above the higher of land and water if water == TRUE)
llGroundSlope(vector v)returns the ground slope below the object position + v
llHTTPRequest(string url, list parameters, string body)[key] Sends HTTP request to url with the specified body and parameters.
llInsertString(string dst, integer position, string src)[string] inserts src into dst at position and returns the result
llInstantMessage(key user, string message)IMs message to the user
llIntegerToBase64(integer number)[string] Little endian encode of lower 24-bits of integer as a 4 character Base64 string.
llKey2Name(key id)[string] Returns the name of the object key, iff the object is in the current simulator, otherwise the empty string
llList2CSV(list src)[string] Create a string of comma separated values from list
llList2Float(list src, integer index)[float] Copy the float at index in the list
llList2Integer(list src, integer index)[integer] Copy the integer at index in the list
llList2Key(list src, integer index)[key] Copy the key at index in the list
llList2List(list src, integer start, integer end)[list] Copy the slice of the list from start to end
llList2ListStrided(list src, integer start, integer end, integer stride)[list] Copy the strided slice of the list from start to end
llList2Rot(list src, integer index)[rotation] Copy the rotation at index in the list
llList2String(list src, integer index)[string] Copy the string at index in the list
llList2Vector(list src, integer index)[vector] Copy the vector at index in the list
llListen(integer channel, string name, key id, string msg)[integer] sets a callback for msg on channel from name and id (name, id, and/or msg can be empty) and returns an indentifier that can be used to deactivate or remove the listen
llListenControl(integer number, integer active)makes a listen event callback active or inactive
llListenRemove(integer number)removes listen event callback number
llListFindList(list src, list test)[integer] Returns the start of the first instance of test in src, -1 if not found
llListInsertList(list dest, list src, integer start)[list] Inserts src into dest at position start
llListRandomize(list src, integer stride)[list] Returns a randomized list of blocks of size stride
llListReplaceList(list dest, list src, integer start, integer end)[list] Replaces start through end of dest with src.
llListSort(list src, integer stride, integer ascending)[list] Sort the list into blocks of stride in ascending order if ascending == TRUE.  Note that sort only works between same types.
llListStatistics(integer operation, list input)[float] This function allows a script to perform a statistical operation as defined by operation on a list composed of integers and floats.
llLoadURL(key avatar_id, string message, string url)Shows dialog to avatar avatar_id offering to load web page at URL.  If user clicks yes, launches their web browser.
llLog(float val)[float] Returns the base e log of val if val > 0, otherwise returns 0.
llLog10(float val)[float] Returns the base 10 log of val if val > 0, otherwise returns 0.
llLookAt(vector target, F32 strength, F32 damping)Cause object name to point it's forward axis towards target
llLoopSound(string sound, float volume)plays attached sound looping indefinitely at volume (0.0 - 1.0)
llLoopSoundMaster(string sound, float volume)plays attached sound looping at volume (0.0 - 1.0), declares it a sync master
llLoopSoundSlave(string sound, float volume)plays attached sound looping at volume (0.0 - 1.0), synced to most audible sync master
llMakeExplosion(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)Make a round explosion of particles
llMakeFire(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)Make fire like particles
llMakeFountain(integer particles, float scale, float vel, float lifetime, float arc, integer bounce, string texture, vector offset, float bounce_offset)Make a fountain of particles
llMakeSmoke(integer particles, float scale, float vel, float lifetime, float arc, string texture, vector offset)Make smoke like particles
llMapDestination(string simname, vector position, vector lookat)Shows a given location on the map.
llMD5String(string src, integer nonce)[string] Performs a RSA Data Security, Inc. MD5 Message-Digest Algorithm on string with nonce.  Returns a 32 character hex string.
llMessageLinked(integer linknum, integer num, string str, key id)Sends num, str, and id to members of the link set(LINK_SET sends to all tasks,LINK_ALL_OTHERS to all other tasks,LINK_ALL_CHILDREN to all children, LINK_THIS to self
llMinEventDelay(float delay)Set the minimum time between events being handled
llModifyLand(integer action, integer size)Modify land with action (LAND_LEVEL, LAND_RAISE, LAND_LOWER)on size (LAND_SMALL_BRUSH, LAND_MEDIUM_BRUSH, LAND_LARGE_BRUSH)
llModPow(integer a, integer b, integer c)[integer] Returns a raised to the b power, mod c.
llMoveToTarget(vector target, float tau)critically damp to target in tau seconds (if the script is physical)
llOffsetTexture(float offsets, float offsett, integer face)sets the texture s, t offsets for the chosen face
llOpenRemoteDataChannel()Creates a channel to listen for XML-RPC calls.  Will trigger a remote_data event with channel id once it is available.
llOverMyLand(key id)[integer] Returns TRUE if id is over land owner of object owns, FALSE otherwise
llOwnerSay(string msg)says msg to owner only (if owner in sim)
llParcelMediaCommandList(list command)Sends a list of commands, some with arguments, to a parcel.
llParcelMediaQuery(list query)[list] Sends a list of queries, returns a list of results.
llParseString2List(string src, list separators, list spacers)[list] Breaks src into a list, discarding separators, keeping spacers (separators and spacers must be lists of strings, maximum of 8 each)
llParseStringKeepNulls(string src, list separators, list spacers)[list] Breaks src into a list, discarding separators, keeping spacers (separators and spacers must be lists of strings, maximum of 8 each, creates empty list entries)
llParticleSystem(list rules)Creates a particle system based on rules.  Empty list removes particle system from object.List format is [ rule1, data1, rule2, data2 . . . rulen, datan ]
llPassCollisions(integer pass)if pass == TRUE, collisions are passed from children on to parents (default is FALSE)
llPassTouches(integer pass)if pass == TRUE, touches are passed from children on to parents (default is FALSE)
llPlaySound(string sound, float volume)plays attached sound once at volume (0.0 - 1.0)
llPlaySoundSlave(string sound, float volume)plays attached sound once at volume (0.0 - 1.0), synced to next loop of most audible sync master
llPointAt(vector pos)Make agent that owns object point at pos
llPow(float base, float exponent)[float] returns 0 and triggers Math Error for imaginary results
llPreloadSound(string sound)preloads a sound on viewers within range
llPushObject(key id, vector impulse, vector ang_impulse, integer local)Applies impulse and ang_impulse to object id
llReleaseCamera(key avatar)Return camera to agent
llReleaseControls()Stop taking inputs
llRemoteDataReply(key channel, key message_id, string sdata, integer idata)Send an XML-RPC reply to message_id on channel with payload of string sdata and integer idata
llRemoteDataSetRegion()If an object using remote data channels changes regions, you must call this function to reregister the remote data channels.You do not need to make this call if you don't change regions.
llRemoteLoadScriptPin(key target, string name, integer pin, integer running, integer start_param)If the owner of the object this script is attached can modify target,they are in the same region,and the matching pin is used,copy script name onto target,if running == TRUE, start the script with param.
llRemoveFromLandBanList(key avatar)Remove avatar from the land parcel ban list.
llRemoveFromLandPassList(key avatar)Remove avatar from the land parcel pass list.
llRemoveInventory(string inventory)Remove the named inventory item
llRemoveVehicleFlags(integer flags)removes the enabled bits in 'flags'
llRequestAgentData(key id, integer data)[key] Requests data about agent id.  When data is available the dataserver event will be raised
llRequestInventoryData(string name)[key] Requests data from object's inventory object.  When data is available the dataserver event will be raised
llRequestPermissions(key agent, integer perm)ask agent to allow the script to do perm (NB: Debit, ownership, link, joint, and permission requests can only go to the task's owner)
llRequestSimulatorData(string simulator, integer data)[key] Requests data about simulator.  When data is available the dataserver event will be raised
llResetOtherScript(string name)Resets script name
llResetScript()Resets the script
llResetTime()sets the time to zero
llRezAtRoot(string inventory, vector pos, vector vel, rotation rot, integer param)Instantiate owner's inventory object at pos with velocity vel and rotation rot with start parameter param. The last selected root object's location will be set to pos
llRezObject(string inventory, vector pos, vector vel, rotation rot, integer param)Instanciate owners inventory object at pos with velocity vel and rotation rot with start parameter param
llRot2Angle(rotation rot)[float] Returns the rotation angle represented by rot
llRot2Axis(rotation rot)[vector] Returns the rotation axis represented by rot
llRot2Euler(rotation q)[vector] returns the Euler representation (roll, pitch, yaw) of q
llRot2Fwd(rotation q)[vector] returns the forward vector defined by q
llRot2Left(rotation q)[vector] returns the left vector defined by q
llRot2Up(rotation q)[vector] returns the up vector defined by q
llRotateTexture(float rotation, integer face)sets the texture rotation for the chosen face
llRotBetween(vector v1, vector v2)[rotation] returns the rotation to rotate v1 to v2
llRotLookAt(rotation target, F32 strength, F32 damping)Cause object name to point it's forward axis towards target
llRotTarget(rotation rot, float error)[integer] set rotations with error of rot as a rotational target and return an ID for the rotational target
llRotTargetRemove(integer number)removes rotational target number
llRound(float val)[integer] returns val rounded to the nearest integer
llSameGroup(key id)[integer] Returns TRUE if ID is in the same sim and has the same active group, otherwise FALSE
llSay(integer channel, string msg)says msg on channel
llScaleTexture(float scales, float scalet, integer face)sets the texture s, t scales for the chosen face
llScriptDanger(vector pos)[integer] Returns true if pos is over public land, sandbox land, land that doesn't allow everyone to edit and build, or land that doesn't allow outside scripts
llSendRemoteData(key channel, string dest, integer idata, string sdata)[key] Send an XML-RPC request to dest through channel with payload of channel (in a string), integer idata and string sdata.A message identifier key is returned.An XML-RPC reply will trigger a remote_data event and reference the message id.The message_id is returned.
llSensor(string name, key id, integer type, float range, float arc)Performs a single scan for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0)
llSensorRemove()removes sensor
llSensorRepeat(string name, key id, integer type, float range, float arc, float rate)sets a callback for name and id with type (AGENT, ACTIVE, PASSIVE, and/or SCRIPTED) within range meters and arc radians of forward vector (name, id, and/or keytype can be empty or 0) and repeats every rate seconds
llSetAlpha(float alpha, integer face)sets the alpha
llSetBuoyancy(float buoyancy)Set the tasks buoyancy (0 is none, < 1.0 sinks, 1.0 floats, > 1.0 rises)
llSetCameraAtOffset(vector offset)Sets the camera at offset used in this object if an avatar sits on it
llSetCameraEyeOffset(vector offset)Sets the camera eye offset used in this object if an avatar sits on it
llSetCameraParams(list rules)Sets multiple camera parameters at once.
llSetColor(vector color, integer face)sets the color
llSetDamage(float damage)Sets the amount of damage that will be done to an object that this task hits.  Task will be killed.
llSetForce(vector force, integer local)sets force on object, in local coords if local == TRUE (if the script is physical)
llSetForceAndTorque(vector force, vector torque, integer local)sets the force and torque of object, in local coords if local == TRUE (if the script is physical)
llSetHoverHeight(float height, integer water, float tau)Critically damps to a height (either above ground level or above the higher of land and water if water == TRUE)
llSetInventoryPermMask(string item, integer mask, integer value)Sets the given permission mask to the new value on the inventory item.
llSetLinkAlpha(integer linknumber, float alpha, integer face)If a prim exists in the link chain at linknumber, set face to alpha
llSetLinkColor(integer linknumber, vector color, integer face)If a task exists in the link chain at linknumber, set face to color
llSetLocalRot(rotation rot)sets the rotation of a child prim relative to the root prim
llSetObjectDesc(string name)Sets the object's description
llSetObjectName(string name)Sets the objects name
llSetObjectPermMask(integer mask, integer value)Sets the given permission mask to the new value on the root object the task is attached to.
llSetParcelMusicURL(string url)Sets the streaming audio URL for the parcel the object is on
llSetPayPrice(integer price, list quick_pay_buttons)Sets the values of the buttons and the text box default for the Pay dialog
llSetPos(vector pos)sets the position (if the script isn't physical)
llSetPrimitiveParams(list rule)Set primtive parameters based on rules.
llSetRemoteScriptAccessPin(integer pin)If pin is set to a non-zero number, the task will accept remote scriptloads via llRemoteLoadScriptPin if it passes in the correct pin.Othersise, llRemoteLoadScriptPin is ignored.
llSetRot(rotation rot)sets the rotation (if the script isn't physical)
llSetScale(vector scale)sets the scale
llSetScriptState(string name, integer run)Control the state of a script name.
llSetSitText(string text)Displays text rather than sit in pie menu
llSetSoundQueueing(integer queue)determines whether attached sound calls wait for the current sound to finish (0 = no [default], nonzero = yes)
llSetSoundRadius(float radius)establishes a hard cut-off radius for audibility of scripted sounds (both attached and triggered)
llSetStatus(integer status, integer value)sets status (STATUS_PHYSICS, STATUS_BLOCK_GRAB, STATUS_ROTATE_X, STATUS_ROTATE_Y, and/or STATUS_ROTATE_Z) to value
llSetText(string text, vector color, float alpha)Set text floating over object
llSetTexture(string texture, integer face)sets the texture of face
llSetTextureAnim(integer mode, integer face, integer sizex, integer sizey, float start, float length, float rate)Animate the texture on the specified face/faces
llSetTimerEvent(float sec)Cause the timer event to be triggered every sec seconds
llSetTorque(vector torque, integer local)sets the torque of object, in local coords if local == TRUE (if the script is physical)
llSetTouchText(string text)Displays text in pie menu that acts as a touch
llSetVehicleFlags(integer flags)sets the enabled bits in 'flags'
llSetVehicleFloatParam(integer param, float value)sets the specified vehicle float parameter
llSetVehicleRotationParam(integer param, rotation rot)sets the specified vehicle rotation parameter
llSetVehicleType(integer type)sets vehicle to one of the default types
llSetVehicleVectorParam(integer param, vector vec)sets the specified vehicle vector parameter
llShout(integer channel, string msg)shouts msg on channel
llSin(float theta)[float] theta in radians
llSitTarget(vector offset, rotation rot)Set the sit location for this object (if offset == <0,0,0> clear it)
llSleep(float sec)Put script to sleep for sec seconds
llSound(string sound, float volume, integer queue, integer loop)plays sound at volume and whether it should loop or not
llSoundPreload(string sound)preloads a sound on viewers within range
llSqrt(float val)[float] returns 0 and triggers a Math Error for imaginary results
llStartAnimation(string anim)Start animation anim for agent that owns object
llStopAnimation(string anim)Stop animation anim for agent that owns object
llStopHover()Stop hovering to a height
llStopLookAt()Stop causing object name to point at a target
llStopMoveToTarget()Stops critically damped motion
llStopPointAt()Stop agent that owns object pointing
llStopSound()Stops currently attached sound
llStringLength(string str)[integer] Returns the length of string
llStringToBase64(string str)[string] Converts a string to the Base 64 representation of the string.
llSubStringIndex(string source, string pattern)[integer] Finds index in source where pattern first appears (returns -1 if not found)
llTakeCamera(key avatar)Move avatar's viewpoint to task
llTakeControls(integer controls, integer accept, integer pass_on)Task controls from agent task has permissions for.  If (accept == (controls & input)), send input to task.  If pass_on send to agent also.
llTan(float theta)[float] theta radians
llTarget(vector position, float range)[integer] set positions within range of position as a target and return an ID for the target
llTargetOmega(vector axis, float spinrate, float gain)Attempt to spin at spinrate with strength gain
llTargetRemove(integer number)removes target number
llTeleportAgentHome(key id)Teleports agent on owner's land to agent's home location
llToLower(string src)[string] convert src to all lower case and returns the result
llToUpper(string src)[string] convert src to all upper case and returns the result
llTriggerSound(string sound, float volume)plays sound at volume (0.0 - 1.0), centered at but not attached to object
llTriggerSoundLimited(string sound, float volume, vector tne, vector bsw)plays sound at volume (0.0 - 1.0), centered at but not attached to object, limited to AABB defined by vectors top-north-east and bottom-south-west
llUnescapeURL(string url)[string] Returns the string that is the URL unescaped version of url
llUnSit(key id)If agent identified by id is sitting on the object the script is attached to or is over land owned by the objects owner, the agent is forced to stand up
llVecDist(vector v1, vector v2)[float] returns the 3D distance between v1 and v2
llVecMag(vector v)[float] returns the magnitude of v
llVecNorm(vector v)[vector] returns the v normalized
llVolumeDetect(integer detect)If detect = TRUE, object becomes phantom but triggers collision_start and collision_end eventswhen other objects start and stop interpenetrating.Must be applied to the root object.
llWater(vector v)[float] returns the water height below the object position + v
llWhisper(integer channel, string msg)whispers msg on channel
llWind(vector v)[vector] returns the wind velocity at the object position + v
llXorBase64Strings(string s1, string s2)[string] Performs an exclusive or on two Base 64 strings and returns a Base 64 string.  s2 repeats if it is shorter than s1.
llXorBase64StringsCorrect(string s1, string s2)[string] Performs an xor on two Base64 strings and returns a Base64 string. s2 repeats if it is shorter than s1.
LOOP
MASK_BASE
MASK_EVERYONE
MASK_GROUP
MASK_NEXT
MASK_OWNER
money(key id, integer amount)Triggered when money is given to task
moving_end()Triggered when task stops moving
moving_start()Triggered when task begins moving
not_at_rot_target()Result of LLRotTarget library function call
not_at_target()Result of llTarget library function call
no_sensor()Result of the llSensor library function call
NULL_KEY
object_rez(key id)Triggered when task rezes in another task
on_rez(integer start_param)Triggered when task is rezed in from inventory or another task
PARCEL_COUNT_GROUP
PARCEL_COUNT_OTHER
PARCEL_COUNT_OWNER
PARCEL_COUNT_SELECTED
PARCEL_COUNT_TEMP
PARCEL_COUNT_TOTAL
PARCEL_DETAILS_AREA
PARCEL_DETAILS_DESC
PARCEL_DETAILS_GROUP
PARCEL_DETAILS_NAME
PARCEL_DETAILS_OWNER
PARCEL_FLAG_ALLOW_CREATE_OBJECTS
PARCEL_FLAG_ALLOW_DAMAGE
PARCEL_FLAG_ALLOW_FLY
PARCEL_FLAG_ALLOW_GROUP_SCRIPTS
PARCEL_FLAG_ALLOW_LANDMARK
PARCEL_FLAG_ALLOW_SCRIPTS
PARCEL_FLAG_ALLOW_TERRAFORM
PARCEL_FLAG_LOCAL_SOUND_ONLY
PARCEL_FLAG_RESTRICT_PUSHOBJECT
PARCEL_FLAG_USE_ACCESS_GROUP
PARCEL_FLAG_USE_ACCESS_LIST
PARCEL_FLAG_USE_BAN_LIST
PARCEL_FLAG_USE_LAND_PASS_LIST
PARCEL_MEDIA_COMMAND_AGENT
PARCEL_MEDIA_COMMAND_AUTO_ALIGN
PARCEL_MEDIA_COMMAND_LOOP
PARCEL_MEDIA_COMMAND_PAUSE
PARCEL_MEDIA_COMMAND_PLAY
PARCEL_MEDIA_COMMAND_STOP
PARCEL_MEDIA_COMMAND_TEXTURE
PARCEL_MEDIA_COMMAND_TIME
PARCEL_MEDIA_COMMAND_UNLOAD
PARCEL_MEDIA_COMMAND_URL
PASSIVE
PAYMENT_INFO_ON_FILE
PAYMENT_INFO_USED
PAY_DEFAULT
PAY_HIDE
PERMISSION_ATTACH
PERMISSION_CHANGE_LINKS
PERMISSION_CONTROL_CAMERA
PERMISSION_DEBIT
PERMISSION_TAKE_CONTROLS
PERMISSION_TRACK_CAMERA
PERMISSION_TRIGGER_ANIMATION
PERM_ALL
PERM_COPY
PERM_MODIFY
PERM_MOVE
PERM_TRANSFER
PI
PING_PONG
PI_BY_TWO
PRIM_BUMP_BARK
PRIM_BUMP_BLOBS
PRIM_BUMP_BRICKS
PRIM_BUMP_BRIGHT
PRIM_BUMP_CHECKER
PRIM_BUMP_CONCRETE
PRIM_BUMP_DARK
PRIM_BUMP_DISKS
PRIM_BUMP_GRAVEL
PRIM_BUMP_LARGETILE
PRIM_BUMP_NONE
PRIM_BUMP_SHINY
PRIM_BUMP_SIDING
PRIM_BUMP_STONE
PRIM_BUMP_STUCCO
PRIM_BUMP_SUCTION
PRIM_BUMP_TILE
PRIM_BUMP_WEAVE
PRIM_BUMP_WOOD
PRIM_CAST_SHADOWS
PRIM_COLOR
PRIM_FLEXIBLE
PRIM_FULLBRIGHT
PRIM_HOLE_CIRCLE
PRIM_HOLE_DEFAULT
PRIM_HOLE_SQUARE
PRIM_HOLE_TRIANGLE
PRIM_MATERIAL
PRIM_MATERIAL_FLESH
PRIM_MATERIAL_GLASS
PRIM_MATERIAL_LIGHT
PRIM_MATERIAL_METAL
PRIM_MATERIAL_PLASTIC
PRIM_MATERIAL_RUBBER
PRIM_MATERIAL_STONE
PRIM_MATERIAL_WOOD
PRIM_PHANTOM
PRIM_PHYSICS
PRIM_POINT_LIGHT
PRIM_POSITION
PRIM_ROTATION
PRIM_SHINY_HIGH
PRIM_SHINY_LOW
PRIM_SHINY_MEDIUM
PRIM_SHINY_NONE
PRIM_SIZE
PRIM_TEMP_ON_REZ
PRIM_TEXGEN
PRIM_TEXGEN_DEFAULT
PRIM_TEXGEN_PLANAR
PRIM_TEXTURE
PRIM_TYPE
PRIM_TYPE_BOX
PRIM_TYPE_CYLINDER
PRIM_TYPE_PRISM
PRIM_TYPE_RING
PRIM_TYPE_SPHERE
PRIM_TYPE_TORUS
PRIM_TYPE_TUBE
PSYS_PART_BOUNCE_MASK
PSYS_PART_EMISSIVE_MASK
PSYS_PART_END_ALPHA
PSYS_PART_END_COLOR
PSYS_PART_END_SCALE
PSYS_PART_FLAGS
PSYS_PART_FOLLOW_SRC_MASK
PSYS_PART_FOLLOW_VELOCITY_MASK
PSYS_PART_INTERP_COLOR_MASK
PSYS_PART_INTERP_SCALE_MASK
PSYS_PART_MAX_AGE
PSYS_PART_START_ALPHA
PSYS_PART_START_COLOR
PSYS_PART_START_SCALE
PSYS_PART_TARGET_LINEAR_MASK
PSYS_PART_TARGET_POS_MASK
PSYS_PART_WIND_MASK
PSYS_SRC_ACCEL
PSYS_SRC_ANGLE_BEGIN
PSYS_SRC_ANGLE_END
PSYS_SRC_BURST_PART_COUNT
PSYS_SRC_BURST_RADIUS
PSYS_SRC_BURST_RATE
PSYS_SRC_BURST_SPEED_MAX
PSYS_SRC_BURST_SPEED_MIN
PSYS_SRC_INNERANGLE
PSYS_SRC_MAX_AGE
PSYS_SRC_OMEGA
PSYS_SRC_OUTERANGLE
PSYS_SRC_PATTERN
PSYS_SRC_PATTERN_ANGLE
PSYS_SRC_PATTERN_ANGLE_CONE
PSYS_SRC_PATTERN_ANGLE_CONE_EMPTY
PSYS_SRC_PATTERN_DROP
PSYS_SRC_PATTERN_EXPLODE
PSYS_SRC_TARGET_KEY
PSYS_SRC_TEXTURE
PUBLIC_CHANNEL
RAD_TO_DEG
REGION_FLAG_ALLOW_DAMAGE
REGION_FLAG_ALLOW_DIRECT_TELEPORT
REGION_FLAG_BLOCK_FLY
REGION_FLAG_BLOCK_TERRAFORM
REGION_FLAG_DISABLE_COLLISIONS
REGION_FLAG_DISABLE_PHYSICS
REGION_FLAG_FIXED_SUN
REGION_FLAG_RESTRICT_PUSHOBJECT
REGION_FLAG_SANDBOX
remote_data(integer event_type, key channel, key message_id, string sender,integer idata, string sdata)Triggered by various XML-RPC calls (event_type will be one of REMOTE_DATA_CHANNEL, REMOTE_DATA_REQUEST, REMOTE_DATA_REPLY)
REMOTE_DATA_CHANNEL
REMOTE_DATA_REPLY
REMOTE_DATA_REQUEST
REVERSE
ROTATE
run_time_permissions(integer perm)Triggered when an agent grants run time permissions to task
SCALE
SCRIPTED
sensor(integer num_detected)Result of the llSensor library function call
SMOOTH
SQRT2
state_entry()Triggered on any state transition and startup
state_exit()Triggered on any state transition
STATUS_BLOCK_GRAB
STATUS_CAST_SHADOWS
STATUS_DIE_AT_EDGE
STATUS_PHANTOM
STATUS_PHYSICS
STATUS_RETURN_AT_EDGE
STATUS_ROTATE_X
STATUS_ROTATE_Y
STATUS_ROTATE_Z
STATUS_SANDBOX
timer()Result of the llSetTimerEvent library function call.
touch(integer num_detected)Triggered while agent is clicking on task
touch_end(integer num_detected)Triggered when agent stops clicking on task
touch_start(integer num_detected)Triggered by the start of agent clicking on task
TRUE
TWO_PI
TYPE_FLOAT
TYPE_INTEGER
TYPE_INVALID
TYPE_KEY
TYPE_ROTATION
TYPE_STRING
TYPE_VECTOR
VEHICLE_ANGULAR_DEFLECTION_EFFICIENCY
VEHICLE_ANGULAR_DEFLECTION_TIMESCALE
VEHICLE_ANGULAR_FRICTION_TIMESCALE
VEHICLE_ANGULAR_MOTOR_DECAY_TIMESCALE
VEHICLE_ANGULAR_MOTOR_DIRECTION
VEHICLE_ANGULAR_MOTOR_TIMESCALE
VEHICLE_BANKING_EFFICIENCY
VEHICLE_BANKING_MIX
VEHICLE_BANKING_TIMESCALE
VEHICLE_BUOYANCY
VEHICLE_FLAG_CAMERA_DECOUPLED
VEHICLE_FLAG_HOVER_GLOBAL_HEIGHT
VEHICLE_FLAG_HOVER_TERRAIN_ONLY
VEHICLE_FLAG_HOVER_UP_ONLY
VEHICLE_FLAG_HOVER_WATER_ONLY
VEHICLE_FLAG_LIMIT_MOTOR_UP
VEHICLE_FLAG_LIMIT_ROLL_ONLY
VEHICLE_FLAG_MOUSELOOK_BANK
VEHICLE_FLAG_MOUSELOOK_STEER
VEHICLE_FLAG_NO_DEFLECTION_UP
VEHICLE_HOVER_EFFICIENCY
VEHICLE_HOVER_HEIGHT
VEHICLE_HOVER_TIMESCALE
VEHICLE_LINEAR_DEFLECTION_EFFICIENCY
VEHICLE_LINEAR_DEFLECTION_TIMESCALE
VEHICLE_LINEAR_FRICTION_TIMESCALE
VEHICLE_LINEAR_MOTOR_DECAY_TIMESCALE
VEHICLE_LINEAR_MOTOR_DIRECTION
VEHICLE_LINEAR_MOTOR_OFFSET
VEHICLE_LINEAR_MOTOR_TIMESCALE
VEHICLE_REFERENCE_FRAME
VEHICLE_TYPE_AIRPLANE
VEHICLE_TYPE_BALLOON
VEHICLE_TYPE_BOAT
VEHICLE_TYPE_CAR
VEHICLE_TYPE_NONE
VEHICLE_TYPE_SLED
VEHICLE_VERTICAL_ATTRACTION_EFFICIENCY
VEHICLE_VERTICAL_ATTRACTION_TIMESCALE
ZERO_ROTATION
ZERO_VECTOR
